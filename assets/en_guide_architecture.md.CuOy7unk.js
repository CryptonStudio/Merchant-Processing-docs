import{_ as a,c as e,o as s,ae as n}from"./chunks/framework.BtEkjhVd.js";const p=JSON.parse('{"title":"Architecture Overview","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/architecture.md","filePath":"en/guide/architecture.md"}'),t={name:"en/guide/architecture.md"};function l(r,i,o,c,h,d){return s(),e("div",null,i[0]||(i[0]=[n(`<h1 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h1><p>The Crypto Payment Gateway is built using a microservices architecture with modular components that handle different aspects of cryptocurrency payment processing.</p><h2 id="system-architecture" tabindex="-1">System Architecture <a class="header-anchor" href="#system-architecture" aria-label="Permalink to &quot;System Architecture&quot;">​</a></h2><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subgraph &quot;External Services&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        User[User/Client]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Blockchain[Blockchain Networks]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ThirdParty[Third-party Wallets]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subgraph &quot;API Layer&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Gateway[Gateway Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Widget[Payment Widget]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subgraph &quot;Core Services&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Merchant[Merchant Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Storage[Storage Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Tracking[Tracking Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Collector[Collector Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Signer[Signer Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subgraph &quot;Processing Services&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Multisig[Multisig Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        KYT[KYT Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        WithdrawalAgg[Withdrawal Aggregation]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        CommMediator[Communication Mediator]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subgraph &quot;Infrastructure&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Database[(PostgreSQL)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Redis[(Redis Cache)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        RabbitMQ[Message Queue]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ConnectionService[Connection Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    User --&gt; Gateway</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    User --&gt; Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Gateway --&gt; Merchant</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Gateway --&gt; Storage</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Merchant --&gt; Tracking</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Tracking --&gt; Collector</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Collector --&gt; Signer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Signer --&gt; Multisig</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    KYT --&gt; CommMediator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    WithdrawalAgg --&gt; Signer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Storage --&gt; Database</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Tracking --&gt; Redis</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    CommMediator --&gt; RabbitMQ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Signer --&gt; Blockchain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Collector --&gt; Blockchain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Tracking --&gt; Blockchain</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ThirdParty --&gt; Tracking</span></span></code></pre></div><h2 id="core-components" tabindex="-1">Core Components <a class="header-anchor" href="#core-components" aria-label="Permalink to &quot;Core Components&quot;">​</a></h2><h3 id="applications-apps" tabindex="-1">Applications (<code>/apps</code>) <a class="header-anchor" href="#applications-apps" aria-label="Permalink to &quot;Applications (\`/apps\`)&quot;">​</a></h3><h4 id="gateway-service" tabindex="-1">Gateway Service <a class="header-anchor" href="#gateway-service" aria-label="Permalink to &quot;Gateway Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Main API endpoint for external integrations</li><li><strong>Responsibilities</strong>: <ul><li>REST API endpoints</li><li>Request validation and routing</li><li>Authentication and authorization</li><li>Rate limiting</li></ul></li></ul><h4 id="merchant-service" tabindex="-1">Merchant Service <a class="header-anchor" href="#merchant-service" aria-label="Permalink to &quot;Merchant Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Business logic for merchant operations</li><li><strong>Responsibilities</strong>: <ul><li>Merchant account management</li><li>Payment processing logic</li><li>Balance calculations</li><li>Transaction history</li></ul></li></ul><h4 id="storage-service" tabindex="-1">Storage Service <a class="header-anchor" href="#storage-service" aria-label="Permalink to &quot;Storage Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Data persistence and retrieval</li><li><strong>Responsibilities</strong>: <ul><li>Database operations</li><li>Data validation</li><li>Transaction logging</li><li>Balance updates</li></ul></li></ul><h4 id="tracking-service" tabindex="-1">Tracking Service <a class="header-anchor" href="#tracking-service" aria-label="Permalink to &quot;Tracking Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Blockchain transaction monitoring</li><li><strong>Responsibilities</strong>: <ul><li>Block scanning</li><li>Transaction detection</li><li>Address monitoring</li><li>Event emission</li></ul></li></ul><h4 id="collector-service" tabindex="-1">Collector Service <a class="header-anchor" href="#collector-service" aria-label="Permalink to &quot;Collector Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Token collection from user addresses</li><li><strong>Responsibilities</strong>: <ul><li>Token sweeping</li><li>Gas fee management</li><li>Collection scheduling</li><li>Multi-signature coordination</li></ul></li></ul><h4 id="signer-service" tabindex="-1">Signer Service <a class="header-anchor" href="#signer-service" aria-label="Permalink to &quot;Signer Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Transaction signing and broadcasting</li><li><strong>Responsibilities</strong>: <ul><li>Private key management</li><li>Transaction signing</li><li>Broadcast coordination</li><li>Security validation</li></ul></li></ul><h4 id="multisig-service" tabindex="-1">Multisig Service <a class="header-anchor" href="#multisig-service" aria-label="Permalink to &quot;Multisig Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Multi-signature wallet operations</li><li><strong>Responsibilities</strong>: <ul><li>Multi-sig transaction creation</li><li>Signature collection</li><li>Threshold validation</li><li>Security enforcement</li></ul></li></ul><h4 id="kyt-know-your-transaction" tabindex="-1">KYT (Know Your Transaction) <a class="header-anchor" href="#kyt-know-your-transaction" aria-label="Permalink to &quot;KYT (Know Your Transaction)&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Transaction compliance and monitoring</li><li><strong>Responsibilities</strong>: <ul><li>AML/KYC compliance</li><li>Risk assessment</li><li>Suspicious activity detection</li><li>Regulatory reporting</li></ul></li></ul><h4 id="withdrawal-aggregation" tabindex="-1">Withdrawal Aggregation <a class="header-anchor" href="#withdrawal-aggregation" aria-label="Permalink to &quot;Withdrawal Aggregation&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Optimized batch withdrawals</li><li><strong>Responsibilities</strong>: <ul><li>Withdrawal batching</li><li>Fee optimization</li><li>Timing coordination</li><li>Status management</li></ul></li></ul><h4 id="communication-mediator" tabindex="-1">Communication Mediator <a class="header-anchor" href="#communication-mediator" aria-label="Permalink to &quot;Communication Mediator&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Inter-service communication</li><li><strong>Responsibilities</strong>: <ul><li>Message routing</li><li>Event distribution</li><li>Service coordination</li><li>Error handling</li></ul></li></ul><h4 id="connection-service" tabindex="-1">Connection Service <a class="header-anchor" href="#connection-service" aria-label="Permalink to &quot;Connection Service&quot;">​</a></h4><ul><li><strong>Purpose</strong>: External service connections</li><li><strong>Responsibilities</strong>: <ul><li>RPC connections</li><li>Connection pooling</li><li>Failover handling</li><li>Health monitoring</li></ul></li></ul><h4 id="widget" tabindex="-1">Widget <a class="header-anchor" href="#widget" aria-label="Permalink to &quot;Widget&quot;">​</a></h4><ul><li><strong>Purpose</strong>: Frontend payment interface</li><li><strong>Responsibilities</strong>: <ul><li>Payment UI</li><li>QR code generation</li><li>Status updates</li><li>User interaction</li></ul></li></ul><h3 id="packages-packages" tabindex="-1">Packages (<code>/packages</code>) <a class="header-anchor" href="#packages-packages" aria-label="Permalink to &quot;Packages (\`/packages\`)&quot;">​</a></h3><h4 id="blockchain-clients" tabindex="-1">Blockchain Clients <a class="header-anchor" href="#blockchain-clients" aria-label="Permalink to &quot;Blockchain Clients&quot;">​</a></h4><ul><li><strong>bc-client</strong>: Generic blockchain client interface</li><li><strong>bc-client-provider</strong>: Client provider factory</li><li><strong>bitcoin</strong>: Bitcoin-specific operations</li><li><strong>ether</strong>: Ethereum-compatible operations</li><li><strong>tron</strong>: Tron network operations</li></ul><h4 id="infrastructure" tabindex="-1">Infrastructure <a class="header-anchor" href="#infrastructure" aria-label="Permalink to &quot;Infrastructure&quot;">​</a></h4><ul><li><strong>amqp</strong>: RabbitMQ messaging</li><li><strong>cache-manager</strong>: Redis caching</li><li><strong>config</strong>: Configuration management</li><li><strong>logger</strong>: Logging utilities</li><li><strong>typeorm</strong>: Database ORM extensions</li></ul><h4 id="business-logic" tabindex="-1">Business Logic <a class="header-anchor" href="#business-logic" aria-label="Permalink to &quot;Business Logic&quot;">​</a></h4><ul><li><strong>addresses</strong>: Address management</li><li><strong>currency-rates</strong>: Exchange rate handling</li><li><strong>distributor</strong>: Fund distribution</li><li><strong>payer</strong>: Payment processing</li><li><strong>tracker</strong>: Transaction tracking</li></ul><h4 id="utilities" tabindex="-1">Utilities <a class="header-anchor" href="#utilities" aria-label="Permalink to &quot;Utilities&quot;">​</a></h4><ul><li><strong>common</strong>: Shared utilities</li><li><strong>encoder</strong>: Data encoding/decoding</li><li><strong>helpers</strong>: Helper functions</li><li><strong>http-client</strong>: HTTP client utilities</li><li><strong>io-emitter</strong>: Event emission</li><li><strong>provider</strong>: Service providers</li><li><strong>rpc</strong>: RPC communication</li><li><strong>testing</strong>: Testing utilities</li></ul><h2 id="data-flow" tabindex="-1">Data Flow <a class="header-anchor" href="#data-flow" aria-label="Permalink to &quot;Data Flow&quot;">​</a></h2><h3 id="deposit-flow" tabindex="-1">Deposit Flow <a class="header-anchor" href="#deposit-flow" aria-label="Permalink to &quot;Deposit Flow&quot;">​</a></h3><ol><li>User sends cryptocurrency to generated address</li><li><strong>Tracking Service</strong> detects incoming transaction</li><li><strong>Storage Service</strong> updates balance records</li><li><strong>Collector Service</strong> sweeps tokens to collection wallet</li><li><strong>Merchant Service</strong> processes business logic</li><li><strong>Communication Mediator</strong> sends notifications</li></ol><h3 id="withdrawal-flow" tabindex="-1">Withdrawal Flow <a class="header-anchor" href="#withdrawal-flow" aria-label="Permalink to &quot;Withdrawal Flow&quot;">​</a></h3><ol><li><strong>Gateway</strong> receives withdrawal request</li><li><strong>Merchant Service</strong> validates request and balance</li><li><strong>Withdrawal Aggregation</strong> batches requests (if enabled)</li><li><strong>Signer Service</strong> creates and signs transaction</li><li><strong>Multisig Service</strong> handles multi-signature requirements</li><li><strong>Storage Service</strong> updates balances and status</li><li><strong>Communication Mediator</strong> sends confirmation</li></ol><h2 id="address-types-and-ownership" tabindex="-1">Address Types and Ownership <a class="header-anchor" href="#address-types-and-ownership" aria-label="Permalink to &quot;Address Types and Ownership&quot;">​</a></h2><h3 id="user-addresses-default" tabindex="-1">User Addresses (Default) <a class="header-anchor" href="#user-addresses-default" aria-label="Permalink to &quot;User Addresses (Default)&quot;">​</a></h3><ul><li><strong>Purpose</strong>: Receive deposits from users</li><li><strong>Key Management</strong>: Gateway controls private keys</li><li><strong>Usage</strong>: Primary deposit addresses</li></ul><h3 id="hot-wallets-hot-type" tabindex="-1">Hot Wallets (<code>hot</code> type) <a class="header-anchor" href="#hot-wallets-hot-type" aria-label="Permalink to &quot;Hot Wallets (\`hot\` type)&quot;">​</a></h3><ul><li><strong>Purpose</strong>: Source for withdrawals to users</li><li><strong>Key Management</strong>: Gateway controls private keys</li><li><strong>Requirements</strong>: Must maintain native coin balance for gas fees</li></ul><h3 id="cold-wallets-cold-type" tabindex="-1">Cold Wallets (<code>cold</code> type) <a class="header-anchor" href="#cold-wallets-cold-type" aria-label="Permalink to &quot;Cold Wallets (\`cold\` type)&quot;">​</a></h3><ul><li><strong>Purpose</strong>: Long-term storage destination</li><li><strong>Key Management</strong>: Gateway does NOT control private keys</li><li><strong>Usage</strong>: Secure storage of collected funds</li></ul><h3 id="token-collectors-tokens-collector-type" tabindex="-1">Token Collectors (<code>tokens_collector</code> type) <a class="header-anchor" href="#token-collectors-tokens-collector-type" aria-label="Permalink to &quot;Token Collectors (\`tokens_collector\` type)&quot;">​</a></h3><ul><li><strong>Purpose</strong>: Intermediate collection of tokens</li><li><strong>Key Management</strong>: Gateway controls private keys</li><li><strong>Requirements</strong>: Must maintain native coin balance for gas fees</li></ul><h2 id="address-modes" tabindex="-1">Address Modes <a class="header-anchor" href="#address-modes" aria-label="Permalink to &quot;Address Modes&quot;">​</a></h2><h3 id="single-mode-addresses-mode-single" tabindex="-1">Single Mode (<code>ADDRESSES_MODE=single</code>) <a class="header-anchor" href="#single-mode-addresses-mode-single" aria-label="Permalink to &quot;Single Mode (\`ADDRESSES_MODE=single\`)&quot;">​</a></h3><ul><li>One address per coin per network</li><li>Manual address creation required for each coin</li><li>Granular control over address allocation</li></ul><h3 id="common-mode-addresses-mode-common" tabindex="-1">Common Mode (<code>ADDRESSES_MODE=common</code>) <a class="header-anchor" href="#common-mode-addresses-mode-common" aria-label="Permalink to &quot;Common Mode (\`ADDRESSES_MODE=common\`)&quot;">​</a></h3><ul><li>One address per network (all coins)</li><li>Automatic balance creation for all network coins</li><li>Simplified address management</li></ul><h3 id="cross-mode-addresses-mode-cross" tabindex="-1">Cross Mode (<code>ADDRESSES_MODE=cross</code>) <a class="header-anchor" href="#cross-mode-addresses-mode-cross" aria-label="Permalink to &quot;Cross Mode (\`ADDRESSES_MODE=cross\`)&quot;">​</a></h3><ul><li>One address for compatible networks</li><li>Maximum address reuse</li><li>Optimal for EVM-compatible chains</li></ul><h2 id="withdrawal-aggregation-modes" tabindex="-1">Withdrawal Aggregation Modes <a class="header-anchor" href="#withdrawal-aggregation-modes" aria-label="Permalink to &quot;Withdrawal Aggregation Modes&quot;">​</a></h2><h3 id="none-mode" tabindex="-1">None Mode <a class="header-anchor" href="#none-mode" aria-label="Permalink to &quot;None Mode&quot;">​</a></h3><ul><li>Individual transactions for each withdrawal</li><li>Higher fees but immediate processing</li><li>Suitable for high-value, low-frequency withdrawals</li></ul><h3 id="batch-mode" tabindex="-1">Batch Mode <a class="header-anchor" href="#batch-mode" aria-label="Permalink to &quot;Batch Mode&quot;">​</a></h3><ul><li>Multiple withdrawals in single transaction</li><li>Optimized fees through batching</li><li>Configurable batch size and timing</li><li>Ideal for high-frequency, smaller withdrawals</li></ul><h2 id="security-architecture" tabindex="-1">Security Architecture <a class="header-anchor" href="#security-architecture" aria-label="Permalink to &quot;Security Architecture&quot;">​</a></h2><h3 id="multi-layer-security" tabindex="-1">Multi-layer Security <a class="header-anchor" href="#multi-layer-security" aria-label="Permalink to &quot;Multi-layer Security&quot;">​</a></h3><ol><li><strong>API Layer</strong>: Authentication, rate limiting, input validation</li><li><strong>Service Layer</strong>: Business logic validation, authorization</li><li><strong>Data Layer</strong>: Encrypted storage, audit logging</li><li><strong>Network Layer</strong>: Secure communication, VPN support</li></ol><h3 id="key-management" tabindex="-1">Key Management <a class="header-anchor" href="#key-management" aria-label="Permalink to &quot;Key Management&quot;">​</a></h3><ul><li>Hardware Security Module (HSM) support</li><li>Multi-signature wallet integration</li><li>Key rotation capabilities</li><li>Secure key derivation</li></ul><h3 id="monitoring-compliance" tabindex="-1">Monitoring &amp; Compliance <a class="header-anchor" href="#monitoring-compliance" aria-label="Permalink to &quot;Monitoring &amp; Compliance&quot;">​</a></h3><ul><li>Real-time transaction monitoring</li><li>AML/KYC integration</li><li>Suspicious activity detection</li><li>Regulatory compliance reporting</li></ul><h2 id="scalability-features" tabindex="-1">Scalability Features <a class="header-anchor" href="#scalability-features" aria-label="Permalink to &quot;Scalability Features&quot;">​</a></h2><h3 id="horizontal-scaling" tabindex="-1">Horizontal Scaling <a class="header-anchor" href="#horizontal-scaling" aria-label="Permalink to &quot;Horizontal Scaling&quot;">​</a></h3><ul><li>Microservices architecture</li><li>Load balancer support</li><li>Database sharding capabilities</li><li>Cache layer optimization</li></ul><h3 id="performance-optimization" tabindex="-1">Performance Optimization <a class="header-anchor" href="#performance-optimization" aria-label="Permalink to &quot;Performance Optimization&quot;">​</a></h3><ul><li>Connection pooling</li><li>Batch processing</li><li>Asynchronous operations</li><li>Efficient data structures</li></ul><h3 id="high-availability" tabindex="-1">High Availability <a class="header-anchor" href="#high-availability" aria-label="Permalink to &quot;High Availability&quot;">​</a></h3><ul><li>Service redundancy</li><li>Failover mechanisms</li><li>Health monitoring</li><li>Graceful degradation</li></ul>`,79)]))}const u=a(t,[["render",l]]);export{p as __pageData,u as default};
