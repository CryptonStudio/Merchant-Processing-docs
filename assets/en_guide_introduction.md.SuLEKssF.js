import{_ as a,c as t,o as i,ae as r}from"./chunks/framework.BtEkjhVd.js";const m=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/introduction.md","filePath":"en/guide/introduction.md"}'),o={name:"en/guide/introduction.md"};function n(l,e,s,d,c,h){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><p>Welcome to the Crypto Payment Gateway documentation! This comprehensive guide will help you integrate cryptocurrency payment processing into your applications.</p><h2 id="what-is-crypto-payment-gateway" tabindex="-1">What is Crypto Payment Gateway? <a class="header-anchor" href="#what-is-crypto-payment-gateway" aria-label="Permalink to &quot;What is Crypto Payment Gateway?&quot;">​</a></h2><p>Crypto Payment Gateway is a robust, enterprise-grade solution for accepting and processing cryptocurrency payments. It supports multiple blockchain networks and provides a unified API for managing digital asset transactions.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><h3 id="🔐-security-first" tabindex="-1">🔐 <strong>Security First</strong> <a class="header-anchor" href="#🔐-security-first" aria-label="Permalink to &quot;🔐 **Security First**&quot;">​</a></h3><ul><li>Multi-signature wallet support</li><li>Hardware security module (HSM) integration</li><li>Advanced encryption and key management</li><li>Comprehensive audit trails</li></ul><h3 id="🌐-multi-network-support" tabindex="-1">🌐 <strong>Multi-Network Support</strong> <a class="header-anchor" href="#🌐-multi-network-support" aria-label="Permalink to &quot;🌐 **Multi-Network Support**&quot;">​</a></h3><ul><li><strong>Bitcoin</strong> - The original cryptocurrency</li><li><strong>Ethereum</strong> - Smart contracts and ERC-20 tokens</li><li><strong>Tron</strong> - High throughput blockchain</li><li><strong>Polygon</strong> - Layer 2 scaling solution</li><li><strong>BSC</strong> - Binance Smart Chain</li><li><strong>Arbitrum</strong> - Ethereum Layer 2</li><li><strong>Fantom</strong> - High-speed blockchain</li><li><strong>Litecoin</strong> - Fast and lightweight</li></ul><h3 id="⚡-high-performance" tabindex="-1">⚡ <strong>High Performance</strong> <a class="header-anchor" href="#⚡-high-performance" aria-label="Permalink to &quot;⚡ **High Performance**&quot;">​</a></h3><ul><li>Real-time transaction processing</li><li>Optimized withdrawal aggregation</li><li>Scalable microservices architecture</li><li>Redis caching for fast responses</li></ul><h3 id="💰-cost-optimization" tabindex="-1">💰 <strong>Cost Optimization</strong> <a class="header-anchor" href="#💰-cost-optimization" aria-label="Permalink to &quot;💰 **Cost Optimization**&quot;">​</a></h3><ul><li>Intelligent fee management</li><li>Batch transaction processing</li><li>Withdrawal aggregation to reduce fees</li><li>Dynamic gas price optimization</li></ul><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h2><p>The gateway follows a modular microservices architecture with separate services for:</p><ul><li><strong>API Gateway</strong> - Central entry point for all requests</li><li><strong>Address Service</strong> - Manages cryptocurrency addresses and wallets</li><li><strong>Network Service</strong> - Handles blockchain network interactions</li><li><strong>Withdrawal Service</strong> - Processes cryptocurrency withdrawals</li><li><strong>Transaction Service</strong> - Tracks and manages transactions</li></ul><h2 id="address-management-modes" tabindex="-1">Address Management Modes <a class="header-anchor" href="#address-management-modes" aria-label="Permalink to &quot;Address Management Modes&quot;">​</a></h2><p>The gateway supports three different address management modes:</p><h3 id="_1-single-mode" tabindex="-1">1. Single Mode <a class="header-anchor" href="#_1-single-mode" aria-label="Permalink to &quot;1. Single Mode&quot;">​</a></h3><ul><li>One address per coin per network</li><li>Maximum control and isolation</li><li>Ideal for high-value transactions</li></ul><h3 id="_2-common-mode" tabindex="-1">2. Common Mode <a class="header-anchor" href="#_2-common-mode" aria-label="Permalink to &quot;2. Common Mode&quot;">​</a></h3><ul><li>One address for all coins within a network</li><li>Simplified management</li><li>Automatic balance tracking for new coins</li></ul><h3 id="_3-cross-mode" tabindex="-1">3. Cross Mode <a class="header-anchor" href="#_3-cross-mode" aria-label="Permalink to &quot;3. Cross Mode&quot;">​</a></h3><ul><li>One address across compatible networks</li><li>Maximum efficiency</li><li>Reduced operational complexity</li></ul><h2 id="withdrawal-modes" tabindex="-1">Withdrawal Modes <a class="header-anchor" href="#withdrawal-modes" aria-label="Permalink to &quot;Withdrawal Modes&quot;">​</a></h2><h3 id="standard-mode" tabindex="-1">Standard Mode <a class="header-anchor" href="#standard-mode" aria-label="Permalink to &quot;Standard Mode&quot;">​</a></h3><ul><li>Individual withdrawal processing</li><li>Immediate transaction execution</li><li>Higher transaction fees</li></ul><h3 id="aggregation-mode" tabindex="-1">Aggregation Mode <a class="header-anchor" href="#aggregation-mode" aria-label="Permalink to &quot;Aggregation Mode&quot;">​</a></h3><ul><li>Batch multiple withdrawals</li><li>Optimized fee structure</li><li>Configurable timing and thresholds</li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Ready to integrate? Check out our <a href="./quick-start.html">Quick Start Guide</a> to begin your integration journey.</p><h2 id="need-help" tabindex="-1">Need Help? <a class="header-anchor" href="#need-help" aria-label="Permalink to &quot;Need Help?&quot;">​</a></h2><ul><li>📖 Browse our <a href="./../api/overview.html">API Reference</a></li><li>💻 Check out <a href="./../examples/basic-usage.html">Code Examples</a></li><li>🔧 Follow our <a href="./../integration/getting-started.html">Integration Guides</a></li></ul><hr><p><em>Next: <a href="./quick-start.html">Quick Start Guide</a></em></p>',35)]))}const g=a(o,[["render",n]]);export{m as __pageData,g as default};
